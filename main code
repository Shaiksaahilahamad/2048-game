import random
import os

SIZE = 4

def init_board():
    board = [[0] * SIZE for _ in range(SIZE)]
    add_new_tile(board)
    add_new_tile(board)
    return board

def add_new_tile(board):
    empty_cells = [(i, j) for i in range(SIZE) for j in range(SIZE) if board[i][j] == 0]
    if empty_cells:
        i, j = random.choice(empty_cells)
        board[i][j] = 2 if random.random() < 0.9 else 4

def print_board(board):
    os.system('cls' if os.name == 'nt' else 'clear')
    for row in board:
        print("\t".join(str(cell) if cell != 0 else '.' for cell in row))
    print()

def compress(board):
    new_board = [[0] * SIZE for _ in range(SIZE)]
    for i in range(SIZE):
        pos = 0
        for j in range(SIZE):
            if board[i][j] != 0:
                new_board[i][pos] = board[i][j]
                pos += 1
    return new_board

def merge(board):
    for i in range(SIZE):
        for j in range(SIZE - 1):
            if board[i][j] == board[i][j + 1] and board[i][j] != 0:
                board[i][j] *= 2
                board[i][j + 1] = 0
    return board

def reverse(board):
    new_board = []
    for i in range(SIZE):
        new_board.append(board[i][::-1])
    return new_board

def transpose(board):
    new_board = []
    for i in range(SIZE):
        new_board.append([board[j][i] for j in range(SIZE)])
    return new_board

def move_left(board):
    new_board = compress(board)
    new_board = merge(new_board)
    new_board = compress(new_board)
    return new_board

def move_right(board):
    new_board = reverse(board)
    new_board = move_left(new_board)
    new_board = reverse(new_board)
    return new_board

def move_up(board):
    new_board = transpose(board)
    new_board = move_left(new_board)
    new_board = transpose(new_board)
    return new_board

def move_down(board):
    new_board = transpose(board)
    new_board = move_right(new_board)
    new_board = transpose(new_board)
    return new_board

def is_game_over(board):
    for i in range(SIZE):
        for j in range(SIZE):
            if board[i][j] == 0:
                return False
            if i < SIZE - 1 and board[i][j] == board[i + 1][j]:
                return False
            if j < SIZE - 1 and board[i][j] == board[i][j + 1]:
                return False
    return True

def main():
    board = init_board()
    print_board(board)
    while True:
        move = input("Enter move (w/a/s/d): ").strip().lower()
        if move in 'wasd':
            if move == 'w':
                board = move_up(board)
            elif move == 'a':
                board = move_left(board)
            elif move == 's':
                board = move_down(board)
            elif move == 'd':
                board = move_right(board)
            add_new_tile(board)
            print_board(board)
            if is_game_over(board):
                print("Game Over!")
                break
        else:
            print("Invalid move! Please enter w, a, s, or d.")

if __name__ == "__main__":
    main()
